basePath: /
definitions:
  errors.RestErr:
    properties:
      error:
        type: string
      message:
        type: string
      status:
        type: integer
    type: object
  referral_codes.ReferralCode:
    properties:
      code:
        type: string
      expires_at:
        example: 2024-11-30 07:45:48.250048+00
        format: date-time
        type: string
      user_id:
        type: string
    required:
    - expires_at
    type: object
  referral_codes.ReferralCodeRequest:
    properties:
      expires_at:
        example: 2024-11-30 07:45:48.250048+00
        format: date-time
        type: string
    required:
    - expires_at
    type: object
  users.LoginUserRequest:
    properties:
      email:
        example: user@example.com
        type: string
      password:
        example: password123
        type: string
    required:
    - email
    - password
    type: object
  users.RegisterUserRequest:
    properties:
      email:
        example: user@example.com
        type: string
      password:
        type: string
      referral_code:
        type: string
    required:
    - email
    - password
    type: object
  users.User:
    properties:
      created_at:
        example: 2024-10-31 07:45:48.250048+00
        type: string
      email:
        example: user@example.com
        type: string
      referral_code:
        example: ABC123
        type: string
      updated_at:
        example: 2024-10-31 07:45:48.250048+00
        type: string
      user_id:
        example: c4f32ef1-8b8e-48c6-95c2-0fe8fbeefddd
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Example API for testing Swagger generation
  title: Simple API Example
  version: "1.0"
paths:
  /ping:
    get:
      description: ping to service
      operationId: ping
      produces:
      - text/plain; charset=utf-8
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Ping
      tags:
      - ping
  /referral-code:
    delete:
      consumes:
      - application/json
      description: delete referral code
      operationId: delete-code
      produces:
      - application/json
      responses:
        "200":
          description: 'status": "deleted"}'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.RestErr'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.RestErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.RestErr'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errors.RestErr'
      security:
      - ApiKeyAuth: []
      summary: Delete referral code
      tags:
      - referral code
    post:
      consumes:
      - application/json
      description: Create referral code with expiration date
      operationId: create-code
      parameters:
      - description: Referral code expiration details
        in: body
        name: referralCode
        required: true
        schema:
          $ref: '#/definitions/referral_codes.ReferralCodeRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/referral_codes.ReferralCode'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.RestErr'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.RestErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.RestErr'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errors.RestErr'
      security:
      - ApiKeyAuth: []
      summary: Create referral code
      tags:
      - referral code
  /referral-code/{email}:
    get:
      consumes:
      - application/json
      description: get referral code by email
      operationId: get-code
      parameters:
      - description: Email Address
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/referral_codes.ReferralCode'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.RestErr'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.RestErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.RestErr'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errors.RestErr'
      summary: Get referral code by email
      tags:
      - referral code
  /referrals:
    get:
      consumes:
      - application/json
      description: get all referrals belong to referrer
      operationId: all-referrals
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/users.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.RestErr'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.RestErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.RestErr'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errors.RestErr'
      security:
      - ApiKeyAuth: []
      summary: Get referrals by referrer
      tags:
      - referral code
  /users:
    post:
      consumes:
      - application/json
      description: register a new user
      operationId: create-account
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/users.RegisterUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/users.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.RestErr'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.RestErr'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.RestErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.RestErr'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errors.RestErr'
      summary: Create
      tags:
      - auth
  /users/login:
    post:
      consumes:
      - application/json
      description: login
      operationId: login
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/users.LoginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.RestErr'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.RestErr'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.RestErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.RestErr'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errors.RestErr'
      summary: Login
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
